unit cControleEstoque;

interface

uses System.classes,
     //lista de Units
     Vcl.Controls,
     Vcl.ExtCtrls,
     Vcl.Dialogs,

     //conectando o banco
     ZAbstractConnection,
     ZConnection,

     //conectando a Query
     ZAbstractRODataset,
     ZAbstractDataset,
     ZDataset,

     //clientDataSet
     Data.DB,
     Datasnap.DBClient,

     //FreeAndNil
     System.SysUtils;

type
  TControleEstoque = class
  private
    ConexaoDB:TZConnection;
    F_ProdutoId:Integer;
    F_Quantidade:Double;
  public
    constructor Create(aConexao: TZConnection);
    destructor Destroy; override;
    function BaixarEstoque: Boolean;
    function RetornarEstoque: Boolean;
  published
    property ProdutoId:Integer  read F_ProdutoId  write F_ProdutoId;
    property Quantidade:Double  read F_Quantidade write F_Quantidade;
  end;

implementation

{$region 'Constructor and Destructor'}
constructor TControleEstoque.Create(aConexao:TZConnection);
begin
  ConexaoDB:=aConexao;
end;

destructor TControleEstoque.Destroy;
begin

  inherited;
end;

{$endregion}

function TControleEstoque.BaixarEstoque: Boolean;
var qry:TZQuery;
begin
  try
    result:=true;
    qry:=TZQuery.Create(nil);
    qry.Connection:=ConexaoDB;

    qry.SQL.Clear;
    qry.SQL.Add('UPDATE produtos '+
                '   SET quantidade = quantidade - :qtdeBaixa '+
                ' WHERE produtoId=:produtoId ');
    qry.ParamByName('produtoId').AsInteger  :=ProdutoId;
    qry.ParamByName('qtdeBaixa').AsFloat    :=Quantidade;
    try
      qry.ExecSQL;
    except
      result:=false;
    end;

  finally
    if Assigned(qry) then
      FreeAndNil(qry);
  end;
end;

function TControleEstoque.RetornarEstoque: Boolean;
var qry:TZQuery;
begin
  try
    result:=true;
    qry:=TZQuery.Create(nil);
    qry.Connection:=ConexaoDB;

    qry.SQL.Clear;
    qry.SQL.Add('UPDATE produtos '+
                '   SET quantidade = quantidade + :qtdeRetorno '+
                ' WHERE produtoId=:produtoId ');
    qry.ParamByName('produtoId').AsInteger    :=ProdutoId;
    qry.ParamByName('qtdeRetorno').AsFloat    :=Quantidade;
    try

    except

    end;

  finally

  end;
end;

end.
